import subprocess as controller
import sys as sftw_control
from datetime import datetime as timer
from socket import socket, AF_INET, SOCK_STREAM


class Service_scanner:

    def scanner(self, remote_server):
        Remote_server = remote_server
        controller.call('cls', shell=True) #cls for windows / clear for linux
        print("-" * 60)
        print("Please wait, scanning services of remote host : " + str(Remote_server))
        print("-" * 60)
        time1 = timer.now()
        try:
            for port in range(1, 1025):
                connector = socket(AF_INET, SOCK_STREAM)
                data = connector.connect_ex((Remote_server, port))
                if data == 0:
                    print("[+] Port  : "+format(port)+"   Open" )
                connector.close()
        except KeyboardInterrupt:
            print("please press Ctrl+c to cancel the scan")
            sftw_control.exit()
        except OSError:
            print("Unable to resolve the provided remote host")
            sftw_control.exit()
        except OSError:
            print("Couldn't connect to the server/host")
            sftw_control.exit()
        timer2 = timer.now()
        total_process_time = timer2 - time1
        print("Scanning completed in " + str(total_process_time))


def main(self):
    print("#####################################")
    print("#  Welcome to Service port scanner  #")
    print("#####################################")
    remote_server = input("please enter the host to scan: ")
    Execute = Service_scanner
    Execute.scanner(self, remote_server)


if __name__ == "__main__":
    main("")
